{"version":3,"sources":["../src/preset.ts"],"names":["addons","__require","core","config","options","framework","previewAnnotations","entry","docsEnabled"],"mappings":"yPAEO,IAAMA,EAAmC,CAACC,EAAQ,QAAQ,2BAA2B,CAAC,EAEhFC,EAA+B,MAAOC,EAAQC,IAAY,CACnE,IAAMC,EAAY,MAAMD,EAAQ,QAAQ,MAAM,WAAW,EAEzD,MAAO,CACH,GAAGD,EACH,QAAS,CACL,KAAMF,EAAQ,QAAQ,4BAA4B,EAClD,QAAS,OAAOI,GAAc,SAAW,CAAC,EAAIA,EAAU,QAAQ,SAAW,CAAC,CAChF,CACJ,CACJ,EAEaC,EAA2D,MAAOC,EAAiB,CAAC,EAAGH,IAAY,CAC5G,IAAMI,EAAc,OAAO,KAAK,MAAMJ,EAAQ,QAAQ,MAAM,OAAQ,CAAC,EAAGA,CAAO,CAAC,EAAE,OAAS,EAE3F,OAAOG,EACF,OAAON,EAAQ,QAAQ,iBAAiB,CAAC,EACzC,OAAOO,EAAc,CAACP,EAAQ,QAAQ,sBAAsB,CAAC,EAAI,CAAC,CAAC,CAC5E","sourcesContent":["import { PresetProperty, Entry } from '@storybook/types';\n\nexport const addons: PresetProperty<'addons'> = [require.resolve('./server/framework-preset')];\n\nexport const core: PresetProperty<'core'> = async (config, options) => {\n    const framework = await options.presets.apply('framework');\n\n    return {\n        ...config,\n        builder: {\n            name: require.resolve('./builders/webpack-builder'),\n            options: typeof framework === 'string' ? {} : framework.options.builder || {},\n        },\n    };\n};\n\nexport const previewAnnotations: PresetProperty<'previewAnnotations'> = async (entry: Entry[] = [], options) => {\n    const docsEnabled = Object.keys(await options.presets.apply('docs', {}, options)).length > 0;\n\n    return entry\n        .concat(require.resolve('./entry-preview'))\n        .concat(docsEnabled ? [require.resolve('./entry-preview-docs')] : []);\n};\n"]}