{"version":3,"sources":["../src/preset.ts"],"names":[],"mappings":";;;;;;;;;AAEO,IAAM,SAAmC,CAAC,UAAQ,QAAQ,2BAA2B,CAAC;AAEtF,IAAM,OAA+B,OAAO,QAAQ,YAAY;AACnE,QAAM,YAAY,MAAM,QAAQ,QAAQ,MAAM,WAAW;AAEzD,SAAO;AAAA,IACH,GAAG;AAAA,IACH,SAAS;AAAA,MACL,MAAM,UAAQ,QAAQ,4BAA4B;AAAA,MAClD,SAAS,OAAO,cAAc,WAAW,CAAC,IAAI,UAAU,QAAQ,WAAW,CAAC;AAAA,IAChF;AAAA,EACJ;AACJ;AAEO,IAAM,qBAA2D,OAAO,QAAiB,CAAC,GAAG,YAAY;AAC5G,QAAM,cAAc,OAAO,KAAK,MAAM,QAAQ,QAAQ,MAAM,QAAQ,CAAC,GAAG,OAAO,CAAC,EAAE,SAAS;AAE3F,SAAO,MACF,OAAO,UAAQ,QAAQ,iBAAiB,CAAC,EACzC,OAAO,cAAc,CAAC,UAAQ,QAAQ,sBAAsB,CAAC,IAAI,CAAC,CAAC;AAC5E","sourcesContent":["import { PresetProperty, Entry } from '@storybook/types';\n\nexport const addons: PresetProperty<'addons'> = [require.resolve('./server/framework-preset')];\n\nexport const core: PresetProperty<'core'> = async (config, options) => {\n    const framework = await options.presets.apply('framework');\n\n    return {\n        ...config,\n        builder: {\n            name: require.resolve('./builders/webpack-builder'),\n            options: typeof framework === 'string' ? {} : framework.options.builder || {},\n        },\n    };\n};\n\nexport const previewAnnotations: PresetProperty<'previewAnnotations'> = async (entry: Entry[] = [], options) => {\n    const docsEnabled = Object.keys(await options.presets.apply('docs', {}, options)).length > 0;\n\n    return entry\n        .concat(require.resolve('./entry-preview'))\n        .concat(docsEnabled ? [require.resolve('./entry-preview-docs')] : []);\n};\n"]}